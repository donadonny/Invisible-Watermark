import sys


class Cluster:
    def __init__(self):
        # node [x,y,value]
        self.candidates = []
        self.nodes = []

    def add_nodes(self, added_nodes):
        for node in added_nodes:
            if node not in self.nodes:
                self.nodes.append(node)

    def add_candidates(self, added_nodes):
        for node in added_nodes:
            if node not in self.candidates:
                self.candidates.append(node)


class Clustering:

    def __init__(self, pool, distance):
        self.clusters = []
        self.array = pool
        self.poolset = []
        self.distance = distance
        # pool has to be 2 two dimension array
        if isinstance(pool, list) and isinstance(pool[0], list) and isinstance(pool[0][0], list) is not True:
            # print "eligible 2 D array."
            pass
        else:
            print "pool is not a eligible 2d array."
            sys.exit(1)
        for x in range(0,len(self.array)):
            for y in range(0,len(self.array[0])):
                self.poolset.append([x, y, self.array[x][y]])
        #for t in self.poolset:
            #print "node is {0}".format(t)

    def start(self):
        for node in self.poolset:
            new_cluster = Cluster()
            new_cluster.add_nodes([node])
            #print "new_cluster {0}".format(new_cluster.nodes)
            self.poolset.remove(node)
            new_cluster.add_candidates(self.get_eligible_candidates(node))
            #for node_in_cluster in new_cluster.candidates:
            while len(new_cluster.candidates) > 0:
                node_in_cluster = new_cluster.candidates.pop()
                #print "node_in_cluster is {0}".format(node_in_cluster)
                new_cluster.add_nodes([node_in_cluster])
                new_cluster.add_candidates(self.get_eligible_candidates(node_in_cluster))
                self.poolset.remove(node_in_cluster)
                #print "cluster {0} has candidates {1}".format(node, new_cluster.candidates)
            # no more nodes in candidates set, add the new_cluster to clusters

            self.clusters.append(new_cluster)
        # print "we have {0} clusters".format(len(self.clusters))

    # candidate, [x,y,value]
    def get_eligible_candidates(self, node):
        candidates = []
        if node[1] - 1 >= 0:
            value = self.array[node[0]][node[1] - 1]
            if abs(node[2] - value) <= self.distance:
                if [node[0], node[1] - 1, value] in self.poolset:
                    candidates.append([node[0], node[1] - 1, value])

        if node[1] +1 <len(self.array[0]):
            value = self.array[node[0]][node[1] + 1]
            if abs(node[2] - value) <= self.distance:
                if [node[0], node[1] + 1, value] in self.poolset:
                    candidates.append([node[0], node[1] + 1, value])
        if node[0] - 1 >= 0:
            value = self.array[node[0] - 1][node[1]]
            if abs(node[2] - value) <= self.distance:
                if [node[0] - 1, node[1], value] in self.poolset:
                    candidates.append([node[0] - 1, node[1], value])

        if node[0] + 1 < len(self.array):
            value = self.array[node[0]+1][node[1]]
            if abs(node[2] - value) <= self.distance:
                if [node[0] + 1, node[1] , value] in self.poolset:
                    candidates.append([node[0]+1, node[1], value])
        # print "candidates is {0}".format(candidates)
        return candidates


def main(argv):
    #a = [[1,2,3,4,],[1,2,3,4], [200,200,100,100],[100,100,100,100]]

# visible mark
# 66/55, 7 clusters
    a=[[519, 517, 516, 516, 516, 517, 518, 520, 521, 520, 518, 519, 520, 519, 519, 517],
     [513, 514, 514, 512, 509, 510, 511, 510, 509, 510, 511, 510, 508, 505, 502, 500],
     [469, 469, 467, 467, 467, 464, 461, 458, 456, 459, 462, 463, 462, 457, 452, 450],
     [401, 401, 400, 400, 399, 398, 396, 393, 393, 397, 401, 402, 401, 401, 401, 401],
     [397, 397, 396, 395, 396, 398, 401, 405, 409, 410, 410, 411, 412, 416, 421, 423],
     [473, 472, 471, 471, 471, 476, 481, 485, 488, 487, 485, 485, 486, 488, 489, 491],
     [532, 532, 532, 531, 532, 533, 536, 539, 541, 538, 535, 535, 536, 537, 538, 539],
     [544, 544, 544, 544, 543, 544, 544, 545, 545, 541, 538, 537, 537, 537, 538, 538],
     [528, 528, 528, 528, 528, 527, 525, 523, 521, 523, 525, 524, 522, 522, 523, 523],
     [514, 515, 516, 518, 518, 517, 514, 512, 510, 512, 514, 514, 514, 514, 513, 512],
     [511, 512, 514, 516, 517, 516, 515, 513, 511, 512, 514, 516, 517, 516, 514, 512],
     [513, 514, 514, 515, 515, 515, 514, 513, 512, 512, 512, 514, 515, 515, 513, 512],
     [518, 517, 516, 515, 514, 515, 515, 515, 516, 514, 513, 514, 515, 514, 514, 514],
     [518, 517, 516, 515, 514, 514, 515, 516, 518, 517, 516, 514, 513, 513, 514, 515],
     [518, 517, 516, 515, 515, 515, 515, 517, 519, 520, 519, 515, 511, 512, 514, 516],
     [517, 517, 516, 516, 516, 515, 514, 516, 518, 518, 517, 515, 513, 514, 515, 515]]
#67/55 8 clusters
    a1 = [[516, 519, 523, 524, 524, 522, 519, 517, 515, 514, 514, 515, 515, 514, 513, 513],
    [499, 503, 506, 506, 504, 503, 501, 496, 492, 490, 490, 489, 487, 484, 481, 477],
    [450, 453, 456, 454, 451, 450, 450, 448, 444, 440, 436, 434, 431, 427, 422, 418],
    [401, 402, 402, 399, 396, 400, 405, 408, 409, 406, 402, 403, 404, 402, 400, 398],
    [424, 421, 418, 419, 420, 425, 430, 433, 435, 436, 438, 443, 447, 448, 448, 450],
    [492, 492, 491, 492, 493, 495, 498, 499, 500, 501, 502, 505, 508, 511, 513, 513],
    [539, 538, 537, 537, 537, 538, 538, 536, 535, 534, 534, 535, 536, 539, 542, 540],
    [538, 537, 536, 535, 535, 535, 535, 534, 533, 532, 531, 531, 532, 532, 531, 530],
    [523, 522, 520, 519, 518, 518, 518, 518, 517, 517, 516, 516, 516, 512, 509, 508],
    [511, 510, 510, 510, 509, 509, 509, 512, 514, 514, 513, 510, 507, 507, 507, 507],
    [511, 511, 512, 513, 513, 513, 513, 512, 511, 511, 511, 511, 511, 510, 508, 508],
    [512, 512, 512, 512, 513, 512, 512, 511, 510, 510, 509, 509, 508, 508, 507, 507],
    [514, 514, 514, 514, 513, 513, 512, 511, 511, 510, 509, 508, 508, 507, 507, 508],
    [516, 516, 515, 515, 514, 514, 514, 513, 513, 512, 511, 511, 510, 510, 510, 511],
    [517, 517, 516, 516, 515, 515, 515, 515, 515, 515, 514, 513, 513, 513, 514, 514],
    [516, 516, 516, 515, 515, 515, 515, 515, 515, 515, 514, 514, 513, 514, 514, 515]]
#66/56 6 cluster

    a1= [[516, 517, 517, 518, 518, 516, 514, 515, 516, 515, 514, 515, 516, 516, 515, 515],
    [514, 515, 516, 518, 519, 517, 515, 516, 517, 516, 515, 516, 517, 516, 516, 515],
    [512, 514, 515, 518, 519, 518, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517],
    [516, 516, 517, 518, 519, 518, 518, 518, 518, 518, 518, 519, 519, 518, 518, 518],
    [523, 522, 521, 521, 520, 520, 520, 520, 520, 520, 520, 521, 521, 520, 520, 519],
    [539, 538, 537, 535, 533, 531, 530, 529, 527, 527, 527, 527, 526, 525, 524, 523],
    [550, 548, 547, 544, 541, 539, 536, 534, 531, 530, 529, 529, 529, 527, 526, 525],
    [541, 540, 539, 536, 533, 531, 530, 528, 526, 525, 524, 521, 518, 517, 517, 517],
    [515, 515, 515, 512, 509, 508, 508, 508, 507, 505, 504, 505, 506, 506, 505, 506],
    [484, 487, 490, 489, 487, 487, 487, 487, 487, 489, 491, 489, 488, 491, 494, 495],
    [477, 480, 482, 482, 483, 483, 483, 482, 482, 482, 483, 485, 487, 487, 486, 487],
    [490, 491, 492, 492, 492, 492, 492, 492, 493, 493, 493, 494, 495, 495, 495, 495],
    [509, 509, 508, 508, 508, 508, 507, 508, 508, 508, 508, 508, 508, 507, 507, 506],
    [519, 519, 519, 519, 519, 519, 519, 519, 518, 518, 517, 516, 516, 515, 514, 513],
    [525, 525, 525, 526, 526, 527, 527, 525, 524, 523, 522, 521, 520, 519, 519, 518],
    [522, 522, 521, 521, 521, 521, 521, 519, 516, 516, 517, 517, 517, 517, 517, 517]]

    #should be increased
# 163/71
    a = [[206, 214, 222, 226, 227, 221, 215, 214, 214, 210, 207, 211, 217, 219, 219, 216],
    [191, 201, 213, 222, 226, 217, 206, 202, 204, 211, 222, 220, 208, 206, 211, 213],
    [177, 188, 204, 214, 222, 223, 221, 212, 207, 216, 234, 239, 221, 208, 207, 214],
    [178, 191, 210, 225, 232, 237, 244, 237, 220, 212, 223, 234, 228, 220, 222, 229],
    [185, 200, 220, 231, 229, 238, 254, 255, 233, 213, 213, 222, 224, 227, 238, 244],
    [191, 211, 224, 220, 215, 232, 248, 242, 229, 224, 223, 221, 219, 225, 242, 251],
    [200, 222, 227, 216, 215, 232, 237, 224, 223, 240, 245, 235, 225, 227, 241, 245],
    [217, 240, 245, 232, 229, 237, 240, 229, 228, 243, 250, 241, 231, 232, 238, 233],
    [234, 247, 248, 242, 244, 244, 243, 239, 235, 237, 239, 239, 237, 237, 234, 227],
    [234, 239, 238, 231, 237, 240, 243, 245, 237, 232, 228, 231, 233, 232, 232, 234],
    [232, 230, 227, 221, 228, 236, 243, 247, 237, 233, 230, 229, 230, 229, 231, 235],
    [240, 245, 241, 233, 231, 238, 243, 244, 238, 238, 238, 238, 243, 241, 229, 221],
    [246, 259, 255, 252, 247, 245, 242, 239, 238, 235, 235, 242, 256, 253, 228, 209],
    [248, 263, 266, 262, 248, 236, 234, 237, 234, 227, 234, 252, 267, 259, 235, 221],
    [239, 249, 256, 254, 239, 223, 226, 237, 231, 222, 233, 252, 258, 252, 242, 239],
    [233, 240, 247, 246, 231, 221, 227, 232, 230, 228, 234, 242, 238, 232, 238, 246]]



#164/72

    a1= [[249, 239, 227, 234, 242, 242, 239, 236, 234, 234, 236, 243, 253, 264, 273, 275],
    [254, 255, 245, 238, 237, 234, 231, 223, 220, 225, 232, 243, 248, 257, 264, 273],
    [257, 263, 251, 236, 231, 226, 223, 219, 219, 228, 238, 254, 254, 249, 245, 255],
    [253, 255, 247, 234, 228, 225, 226, 229, 228, 230, 240, 255, 261, 249, 238, 245],
    [247, 245, 241, 227, 215, 222, 231, 242, 238, 227, 230, 243, 256, 250, 245, 250],
    [241, 245, 240, 225, 211, 220, 233, 238, 233, 222, 219, 234, 252, 253, 252, 256],
    [236, 245, 242, 232, 222, 227, 234, 229, 225, 222, 223, 241, 259, 255, 249, 251],
    [231, 245, 247, 248, 245, 240, 233, 221, 213, 218, 233, 255, 267, 259, 254, 260],
    [227, 244, 251, 256, 254, 245, 233, 222, 217, 223, 245, 261, 262, 256, 259, 267],
    [228, 237, 242, 247, 249, 241, 231, 225, 223, 231, 245, 254, 254, 252, 254, 259],
    [230, 230, 231, 236, 240, 236, 230, 230, 232, 238, 243, 244, 245, 249, 251, 252],
    [231, 223, 226, 233, 241, 243, 242, 237, 234, 234, 241, 246, 251, 253, 253, 256],
    [231, 219, 225, 232, 241, 247, 249, 242, 234, 229, 239, 247, 257, 263, 268, 269],
    [238, 225, 226, 229, 228, 226, 230, 234, 237, 232, 235, 242, 253, 267, 279, 279],
    [233, 227, 230, 230, 219, 208, 212, 225, 238, 237, 234, 239, 248, 263, 277, 279],
    [215, 221, 231, 233, 226, 216, 215, 223, 233, 237, 240, 244, 250, 262, 274, 281]]

    #58/33
    a1 =[[237, 223, 226, 264, 341, 415, 461, 470, 461, 441, 433, 443, 453, 452, 436, 422],
    [236, 225, 231, 268, 342, 417, 463, 471, 461, 442, 429, 434, 443, 446, 440, 427],
    [237, 228, 235, 271, 344, 418, 464, 470, 458, 442, 425, 425, 430, 438, 444, 433],
    [245, 234, 239, 275, 348, 417, 455, 456, 442, 426, 417, 420, 427, 435, 442, 437],
    [252, 239, 240, 278, 352, 414, 445, 443, 427, 412, 412, 417, 426, 434, 440, 439],
    [250, 236, 237, 278, 352, 412, 440, 439, 425, 414, 413, 417, 424, 432, 438, 442],
    [244, 231, 232, 279, 352, 411, 437, 439, 428, 422, 418, 419, 424, 430, 437, 443],
    [240, 225, 231, 281, 357, 413, 436, 440, 432, 430, 427, 427, 428, 431, 435, 441],
    [234, 220, 232, 288, 364, 417, 437, 442, 438, 437, 436, 435, 434, 433, 434, 440],
    [229, 216, 239, 304, 376, 422, 443, 449, 445, 442, 438, 438, 439, 436, 435, 440],
    [224, 215, 249, 322, 390, 428, 450, 455, 451, 445, 439, 441, 443, 440, 437, 440],
    [218, 218, 262, 343, 405, 436, 451, 456, 454, 449, 444, 444, 445, 443, 440, 440],
    [216, 222, 272, 357, 414, 441, 450, 455, 455, 451, 446, 445, 445, 444, 442, 439],
    [224, 231, 277, 349, 401, 428, 442, 452, 454, 448, 440, 440, 441, 439, 437, 433],
    [232, 236, 274, 334, 386, 417, 437, 448, 450, 442, 432, 433, 435, 434, 432, 428],
    [231, 226, 251, 314, 386, 429, 447, 447, 444, 436, 427, 425, 425, 431, 435, 430]]


# shouldn't be increased
#63/55
    a1 = [[497, 498, 499, 501, 502, 502, 501, 501, 501, 502, 503, 505, 507, 508, 510, 511],
    [482, 482, 483, 485, 487, 489, 491, 492, 493, 495, 496, 498, 499, 501, 503, 504],
    [432, 433, 432, 431, 430, 433, 438, 443, 448, 450, 451, 452, 452, 452, 451, 450],
    [373, 374, 373, 364, 357, 358, 363, 371, 378, 379, 378, 379, 379, 377, 375, 374],
    [385, 385, 384, 379, 373, 370, 369, 370, 371, 371, 370, 370, 370, 371, 371, 371],
    [457, 458, 458, 460, 460, 455, 449, 446, 444, 444, 445, 445, 446, 447, 448, 447],
    [504, 506, 508, 512, 514, 511, 507, 505, 504, 504, 505, 507, 508, 509, 510, 509],
    [504, 505, 508, 511, 513, 512, 510, 514, 519, 519, 520, 520, 521, 523, 524, 522],
    [489, 490, 493, 494, 495, 496, 498, 501, 505, 506, 506, 506, 507, 509, 510, 508],
    [482, 483, 486, 487, 488, 488, 488, 491, 494, 495, 495, 496, 496, 498, 499, 498],
    [486, 488, 490, 491, 493, 491, 490, 490, 491, 492, 494, 495, 496, 497, 497, 498],
    [487, 488, 489, 490, 491, 490, 489, 489, 489, 491, 493, 495, 496, 496, 496, 497],
    [488, 489, 489, 490, 490, 490, 490, 490, 491, 492, 494, 497, 498, 497, 496, 499],
    [491, 491, 490, 490, 490, 492, 494, 495, 496, 496, 496, 497, 498, 497, 496, 499],
    [493, 492, 491, 490, 490, 494, 499, 500, 500, 499, 498, 498, 498, 497, 497, 499],
    [493, 493, 493, 492, 492, 496, 500, 500, 498, 497, 497, 498, 500, 500, 499, 500]]
#65/56
    a1 =[[512, 513, 514, 516, 517, 516, 515, 514, 513, 514, 515, 516, 516, 516, 516, 516],
    [512, 512, 512, 512, 512, 513, 515, 515, 515, 515, 515, 515, 515, 514, 514, 514],
    [513, 512, 511, 509, 508, 512, 516, 516, 516, 516, 516, 515, 514, 513, 513, 512],
    [515, 515, 515, 514, 513, 517, 520, 518, 516, 515, 515, 514, 514, 514, 514, 515],
    [517, 518, 519, 520, 520, 523, 525, 522, 517, 517, 518, 518, 518, 519, 521, 522],
    [522, 523, 525, 525, 527, 530, 534, 533, 533, 536, 540, 543, 546, 545, 544, 541],
    [523, 524, 525, 527, 529, 533, 537, 540, 544, 550, 556, 562, 565, 564, 560, 555],
    [508, 509, 511, 514, 517, 519, 522, 529, 537, 544, 550, 557, 560, 557, 552, 546],
    [493, 493, 494, 498, 502, 503, 504, 509, 514, 516, 518, 519, 520, 519, 518, 517],
    [478, 481, 484, 484, 483, 483, 483, 485, 487, 484, 481, 478, 476, 478, 481, 482],
    [481, 480, 480, 481, 482, 481, 479, 478, 476, 473, 470, 467, 466, 467, 470, 473],
    [489, 490, 491, 491, 492, 493, 493, 491, 488, 487, 486, 485, 484, 485, 486, 488],
    [501, 502, 504, 505, 506, 508, 510, 509, 507, 508, 509, 510, 511, 511, 511, 510],
    [507, 508, 509, 509, 510, 512, 515, 515, 514, 516, 518, 520, 522, 522, 521, 520],
    [511, 511, 511, 510, 511, 513, 516, 516, 517, 520, 522, 524, 526, 526, 526, 525],
    [509, 509, 510, 510, 510, 512, 513, 514, 514, 516, 517, 519, 520, 521, 521, 522]]

# investigation
#65/52, too many 1 member cluster
    a = [[408, 411, 413, 413, 412, 414, 415, 414, 412, 410, 408, 406, 405, 407, 409, 406],
    [411, 413, 416, 415, 414, 414, 414, 417, 419, 415, 410, 409, 409, 405, 400, 392],
    [416, 417, 419, 419, 418, 416, 414, 415, 417, 417, 417, 417, 417, 414, 410, 407],
    [427, 423, 421, 423, 425, 424, 422, 417, 414, 419, 426, 429, 433, 441, 447, 450],
    [436, 427, 422, 426, 431, 432, 430, 428, 426, 430, 437, 442, 450, 468, 486, 498],
    [435, 425, 420, 423, 430, 436, 441, 444, 446, 448, 451, 454, 461, 479, 504, 520],
    [429, 420, 417, 420, 426, 437, 449, 459, 466, 465, 463, 463, 468, 476, 500, 518],
    [418, 412, 413, 417, 425, 438, 452, 461, 468, 470, 470, 467, 467, 472, 487, 505],
    [408, 405, 410, 415, 423, 436, 450, 458, 465, 469, 472, 468, 464, 465, 471, 492],
    [408, 406, 411, 415, 421, 431, 442, 452, 460, 465, 467, 466, 464, 462, 463, 483],
    [411, 410, 413, 415, 419, 425, 433, 444, 454, 458, 461, 464, 465, 460, 459, 475],
    [414, 414, 415, 414, 414, 421, 431, 441, 450, 455, 459, 464, 467, 462, 458, 468],
    [418, 417, 416, 412, 410, 418, 429, 438, 446, 452, 457, 464, 469, 464, 460, 463],
    [422, 419, 416, 412, 410, 416, 424, 432, 440, 447, 454, 462, 467, 465, 463, 463],
    [424, 421, 416, 412, 410, 414, 420, 426, 433, 442, 451, 459, 464, 465, 465, 464],
    [423, 419, 414, 412, 411, 412, 415, 419, 426, 437, 449, 457, 462, 464, 465, 465]]
#65/51

    a1= [[310, 309, 306, 301, 296, 295, 296, 300, 305, 305, 305, 307, 309, 306, 303, 305],
    [308, 309, 309, 310, 310, 307, 305, 307, 309, 308, 308, 310, 312, 308, 305, 305],
    [303, 306, 310, 316, 321, 317, 311, 310, 309, 308, 308, 311, 313, 308, 304, 303],
    [298, 303, 310, 316, 321, 318, 314, 311, 308, 308, 309, 312, 315, 316, 311, 304],
    [295, 297, 299, 298, 298, 296, 295, 294, 294, 295, 296, 300, 302, 306, 297, 288],
    [285, 281, 275, 271, 268, 265, 265, 270, 275, 274, 272, 274, 274, 273, 266, 263],
    [290, 287, 280, 274, 269, 265, 264, 269, 273, 271, 267, 266, 264, 264, 264, 263],
    [351, 347, 341, 335, 330, 328, 327, 327, 327, 324, 321, 319, 319, 322, 326, 326],
    [430, 427, 422, 417, 413, 412, 412, 411, 410, 410, 411, 411, 411, 414, 416, 416],
    [475, 473, 472, 471, 471, 472, 472, 471, 470, 471, 472, 473, 473, 472, 470, 470],
    [491, 492, 492, 492, 492, 493, 494, 495, 495, 496, 496, 497, 497, 492, 486, 485],
    [481, 482, 483, 485, 486, 486, 487, 487, 487, 485, 484, 484, 483, 478, 472, 468],
    [458, 459, 460, 462, 463, 463, 463, 462, 462, 459, 456, 454, 452, 449, 445, 439],
    [434, 435, 435, 433, 431, 429, 428, 427, 426, 426, 425, 425, 423, 418, 413, 413],
    [412, 413, 413, 413, 412, 410, 408, 406, 405, 407, 409, 409, 408, 405, 404, 409],
    [407, 409, 410, 410, 408, 409, 409, 407, 405, 405, 405, 403, 402, 405, 408, 414]]

#66 /53
    a1 =[[469, 468, 472, 496, 521, 542, 543, 536, 525, 522, 519, 511, 505, 504, 505, 503],
[469, 465, 466, 482, 507, 531, 542, 537, 527, 521, 516, 511, 506, 504, 503, 502],
[469, 464, 463, 469, 493, 517, 538, 537, 529, 521, 514, 510, 508, 505, 502, 502],
[470, 463, 458, 460, 476, 504, 532, 541, 536, 526, 516, 515, 516, 515, 513, 511],
[470, 463, 455, 455, 463, 492, 521, 539, 537, 528, 516, 517, 520, 521, 521, 517],
[468, 465, 462, 461, 464, 481, 500, 518, 525, 521, 515, 515, 516, 518, 518, 516],
[465, 467, 468, 468, 469, 474, 480, 489, 498, 500, 499, 498, 496, 496, 497, 498],
[462, 466, 468, 470, 471, 471, 471, 472, 473, 475, 476, 476, 475, 473, 471, 474],
[459, 463, 465, 468, 470, 468, 465, 464, 463, 464, 465, 460, 454, 450, 448, 452],
[457, 456, 452, 456, 460, 462, 463, 463, 462, 460, 458, 454, 450, 446, 445, 448],
[447, 447, 445, 450, 454, 455, 454, 456, 458, 459, 458, 456, 454, 451, 450, 452],
[452, 453, 453, 458, 462, 462, 461, 458, 455, 455, 457, 462, 466, 465, 462, 462],
[475, 478, 480, 484, 486, 486, 484, 480, 475, 473, 472, 477, 483, 482, 479, 477],
[509, 510, 511, 512, 514, 514, 513, 511, 507, 504, 501, 500, 501, 500, 498, 497],
[540, 540, 537, 532, 527, 527, 528, 528, 526, 521, 517, 516, 516, 515, 514, 514],
[543, 541, 538, 533, 528, 527, 526, 525, 524, 521, 519, 519, 518, 517, 516, 516]]

    cluster_func = Clustering(a, 4)
    cluster_func.start()

    print "nodes in cluster:"
    cluster_number = 0
    for a in cluster_func.clusters:
        print "cluster {0}:".format(cluster_number)
        print a.nodes
        cluster_number += 1

if __name__ == '__main__':
    main(sys.argv)